@{
    ViewBag.Title = "Home Page";
    var ids = new List<int> { 1, 2, 3 };
}

@foreach (var id in ids)
{
    <div>
        @* Create a link that calls the controller method that returns the partial view*@
        @Html.ActionLink("Open Modal", "ModalAction", "Home", new { Id = id }, new
        {
            @* Needed to link to the html of the modal*@
            data_target = "#modal-container",
            @* Tells the bootstrap javascript to do its thing*@
            data_toggle = "modal"
        })
    </div>
}

@* modals with an embeded form*@
@foreach (var id in ids)
{
    <div>
        @Html.ActionLink("Open Form Modal", "ModalFormAction", "Home", new { Id = id }, new
        {
            data_target = "#modal-container",
            data_toggle = "modal"
        })
    </div>
}

@* the div the form will fill when it succeeds *@
<div id="list">

</div>

@* The normal bootstrap modal with out any content in the modal-content div. Note that the id matches the data_target from the link*@
<div id="modal-container" class="modal fade hidden-print" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">

        </div>
    </div>
</div>

@section scripts {
    @* The normal bootstrap behavior is to only grab the content for the modal once, if you need to pull in different partial views then the data on the modal will have to be cleared.*@
    <script type="text/javascript">
        $(function () {
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
                $('#modal-container .modal-content').empty();
            });
        });

        @* callback from form modal*@
        function success() {
            alert("Success!");
        }
    </script>
}